import mmcorej.CMMCore;
class DiskStreamingThread extends Thread {
	CMMCore core_;
   public DiskStreamingThread(CMMCore core) {
      core_ = core;
   }
     public void run() {
      int count = 0;
      String camera = core_.getCameraDevice();
		while (core_.getRemainingImageCount() > 0 || core_.deviceBusy(camera))
		{
		   if (core_.getRemainingImageCount() > 0)
		   {
		      Object img = core_.popNextImage();
		      mmc.getLastImage();
		      Thread.sleep(350);
		      print("Saved image: " + count++);
		   }
		}
   }
}

//mmc.loadSystemConfiguration("MMConfig_stream.cfg");
//numFrames=50;
//memoryFootprintMB=25;
//intervalMs=50.0; // ms

mmc.setCircularBufferMemoryFootprint(2000);

print("Buffer capacity: " + mmc.getBufferTotalCapacity());
String camera = mmc.getCameraDevice();
mmc.setExposure(10);
mmc.stopSequenceAcquisition();
mmc.startSequenceAcquisition(50, 50, true);

DiskStreamingThread streamWriter = new DiskStreamingThread(mmc);

Thread.sleep(300);       
streamWriter.start();

while (mmc.deviceBusy(camera)) {
   mmc.getLastImage();
   print("Displaying current image, " + core.getRemainingImageCount() + " images waiting in que.");
   Thread.sleep(110);
}

streamWriter.join();

print("Done! Free space = " + mmc.getBufferFreeCapacity());
mmc.stopSequenceAcquisition();


