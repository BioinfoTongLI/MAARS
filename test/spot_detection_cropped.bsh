import fiji.plugin.trackmate.Spot;
import fiji.plugin.trackmate.detection.DetectionUtils;
import fiji.plugin.trackmate.detection.DogDetector;
import fiji.plugin.trackmate.detection.LogDetector;
import fiji.plugin.trackmate.util.TMUtils;
import fiji.plugin.trackmate.Model;
import fiji.plugin.trackmate.Settings;
import fiji.plugin.trackmate.detection.LogDetectorFactory;
import fiji.plugin.trackmate.features.FeatureFilter;
import fiji.plugin.trackmate.TrackMate;
import ij.IJ;
import ij.ImagePlus;
import ij.measure.Calibration;
import ij.plugin.ZProjector;
import fiji.plugin.trackmate.visualization.hyperstack.HyperStackDisplayer;
import fiji.plugin.trackmate.SelectionModel;
import fiji.plugin.maars.utils.FileUtils;
import java.util.ArrayList;
import java.io.File;
import fiji.plugin.trackmate.features.spot.SpotContrastAnalyzerFactory;
import fiji.plugin.trackmate.features.spot.SpotContrastAndSNRAnalyzerFactory;
import fiji.plugin.trackmate.features.spot.SpotIntensityAnalyzerFactory;
import fiji.plugin.trackmate.features.spot.SpotMorphologyAnalyzerFactory;
import fiji.plugin.trackmate.features.spot.SpotRadiusEstimatorFactory;

import fiji.plugin.trackmate.io.TmXmlWriter;

//base_dir = "D:/Data/Tong/MAARS/";
base_dir = "/home/tong/Documents/code/MAARS/";
//base_dir = "/home/hadim/Documents/phd/dev/MAARS/";
//base_dir = "/Volumes/Macintosh/Documents/MAARS/";

addClassPath(base_dir + "target/MAARS_-1.0.jar");
String imgFloder = "/media/tong/74CDBC0B2251059E/test/movie_X0_Y0_FLUO/croppedImgs";
File folder = new File(imgFloder);
ArrayList listFile = FileUtils.listFilesForFolder(folder);
//for ( File fileEntry : listFile) {
//print(fileEntry);
ImagePlus imp =IJ.openImage(imgFloder + "/41.tif");
ZProjector projector = new ZProjector();
projector.setMethod(ZProjector.MAX_METHOD);
projector.setImage(imp);
projector.doProjection();

ImagePlus zprojection = projector.getProjection();
//zprojection.show();
Calibration cal = imp.getCalibration();
print(cal.pixelWidth + "");
Model model = new Model();

Settings settings = new Settings();

settings.setFrom(zprojection);
settings.addSpotAnalyzerFactory(new SpotIntensityAnalyzerFactory());
settings.addSpotAnalyzerFactory(new SpotContrastAnalyzerFactory());
settings.addSpotAnalyzerFactory(new SpotRadiusEstimatorFactory());
settings.addSpotAnalyzerFactory(new SpotContrastAndSNRAnalyzerFactory());
settings.addSpotAnalyzerFactory(new SpotMorphologyAnalyzerFactory());

settings.detectorFactory = new LogDetectorFactory();
Map detectorSettings = new HashMap();
detectorSettings.put("DO_SUBPIXEL_LOCALIZATION", true);
detectorSettings.put("RADIUS", (double) 5);
detectorSettings.put("TARGET_CHANNEL", 1);
detectorSettings.put("THRESHOLD", (double) 0);
detectorSettings.put("DO_MEDIAN_FILTERING", false);
settings.detectorSettings = detectorSettings;

FeatureFilter filter1 = new FeatureFilter("QUALITY", 1, true);
settings.addSpotFilter(filter1);

TrackMate trackmate = new TrackMate(model, settings);
print("Trackmate created");

trackmate.execDetection();
print("execDetection done");

trackmate.execInitialSpotFiltering();
print("execInitialSpotFiltering done");

trackmate.computeSpotFeatures(true);
print("computeSpotFeatures done");

trackmate.execSpotFiltering(true);
print("execSpotFiltering done");

print("Found " + trackmate.getModel().getSpots().getNSpots(false) + " spots");
FileUtils.writeSpotFeatures(new File(imgFloder + "/41.tif"),model);
	
//}

//for(Spot spot : trackmate.getModel().getSpots().iterable(true)) {
 //  print(spot.getFeature(Spot.RADIUS));
//}

// Show
//SelectionModel selectionModel = new SelectionModel(model);
//HyperStackDisplayer displayer= new HyperStackDisplayer(model, selectionModel, zprojection);
//displayer.render();
//displayer.refresh();
